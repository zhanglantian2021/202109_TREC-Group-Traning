#install.packages("tidyverse")
library(tidyverse)
Sys.setenv(LANGUAGE= "en")
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
##tidyverse: A powerful collection of R packages for preparing, wrangling and visualizing data
##tidyverse include the following packaes: dplyr, tidyr, stringr, forcats, tibble, readr, purr, ggplot, readr
##first read your data with readr
#The readr package solves the problem of parsing a flat file into a tibble
##The Salaries data set:  It describes the 9 month academic salaries of 397 college professors at a single institution in 2008-2009
##Read .csv
Salaries <- read.csv("salaries.csv")
Sys.setenv(LANGUAGE= "en")
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
#install.packages("tidyverse")
library(tidyverse)
##tidyverse: A powerful collection of R packages for preparing, wrangling and visualizing data
##tidyverse include the following packaes: dplyr, tidyr, stringr, forcats, tibble, readr, purr, ggplot, readr
##first read your data with readr
#The readr package solves the problem of parsing a flat file into a tibble
##The Salaries data set:  It describes the 9 month academic salaries of 397 college professors at a single institution in 2008-2009
##Read .csv
Salaries <- read.csv("salaries.csv")
class(Salaries) ## data format
names(Salaries) ## variable names
str(Salaries)  ##loot at the data structure
head(Salaries) ## first 6 rows of variables
tail(Salaries) ## last 6 rows of variables
##Read excel
library(readxl)
Salaries <- read_excel("salaries.xlsx", sheet=1)
glimpse(Salaries)  ## same as str(), show more data
View(Salaries)
ls(); rm(list=ls())
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
##tidyverse: A powerful collection of R packages for preparing, wrangling and visualizing data
##tidyverse include the following packaes: dplyr, tidyr, stringr, forcats, tibble, readr, purr, ggplot, readr
##first read your data with readr
#The readr package solves the problem of parsing a flat file into a tibble
##The Salaries data set:  It describes the 9 month academic salaries of 397 college professors at a single institution in 2008-2009
##Read .csv
Salaries <- read.csv("salaries.csv")
class(Salaries) ## data format
names(Salaries) ## variable names
str(Salaries)  ##loot at the data structure
head(Salaries) ## first 6 rows of variables
tail(Salaries) ## last 6 rows of variables
##Read excel
library(readxl)
Salaries <- read_excel("salaries.xlsx", sheet=1)
glimpse(Salaries)  ## same as str(), show more data
View(Salaries)
print(Salaries)
ggplot(Salaries) +
geom_boxplot(aes(x=rank, y=salary))
ggplot(Salaries) +
geom_boxplot(aes(x=discipline, y=salary))
ggplot(Salaries) +
geom_boxplot(aes(x=sex, y=salary))
ggplot(Salaries) +
geom_point(aes(x=yrs.since.phd, y=salary, color=rank))
ggplot(Salaries) +
geom_point(aes(x=yrs.service, y=salary, color=rank))
ggplot(Salaries) +
geom_boxplot(aes(x=sex, y=salary, fill=sex))+
facet_grid(discipline~rank, scale="free")
###### Select variables
newdata <- select(Salaries, rank, sex, salary)
head(newdata)
newdata <- select(Salaries, rank:sex)
head(newdata)
newdata <- select(Salaries, rank, sex, everything())
newdata
###### Select observations
newdata <- filter(Salaries, rank == "Prof")
newdata
newdata <- filter(Salaries, sex != "Male")
newdata
newdata <- filter(Salaries, rank == "Prof" & sex!="Male")
newdata
###### order the rows data descre
newdata <- arrange(Salaries, salary)
newdata
###### Creating new variables
newdata <- mutate(Salaries, salary_10 = salary * 10)
newdata
newdata <- mutate(Salaries, salary_levels = ifelse(salary > 100000, "High", "Low"))
newdata
newdata <- mutate(Salaries, salary_levels = ifelse(salary < 100000, "NA", salary))
newdata
###### Summarizing data
newdata <- summarize(Salaries,
mean_salary = mean(salary, na.rm=T),
max_salary = max(salary, na.rm=T))
newdata
######pipe, %>%: X %> f(y) means that x is ??piped?? in to the function f(x, y)
######The %>% operator passes the result on the left to the first parameter of the function on the right.
Salaries %>% head(n=10)
Salaries %>% names()
Salaries %>%
filter(rank == "Prof")
Salaries %>%
select(rank, sex, salary)
Salaries %>%
mutate(salary_10 = salary * 10)
Salaries %>%
summarize(mean_salary = mean(salary, na.rm=T))
Salaries %>%
filter(rank == "Prof") %>%
select(rank, sex, salary) %>%
mutate(salary_10 = salary * 10) %>%
summarize(mean_salary = mean(salary, na.rm=T))
###### Grouping
newdata <- Salaries %>%
group_by(rank) %>%
summarize(mean_salary = mean(salary, na.rm=T),
max_salary = max(salary, na.rm=T))
newdata
###### Mutation and summarize using group_by
newdata <- Salaries %>%
group_by(rank, sex) %>%
summarize(mean_salary = mean(salary, na.rm=T),
max_salary = max(salary, na.rm=T))
newdata
newdata %>%
ggplot()+
geom_col(aes(x=rank, y=mean_salary, fill=sex), position = "dodge2")
######Data cleaning
#####gather: combine multiple columns into one
glimpse(Salaries)
##### combine columns in to one
Salaries %>%
mutate(rank_discipline = paste(rank, discipline, sep="_"))
newdata <- Salaries %>%
unite("rank_discipline", c(rank, discipline))
newdata
##### separate one column to multiple columns
newdata %>%
separate("rank_discipline", c("rank", "discipline"))
#####
##### gather multiple variabls
long_data <- Salaries %>%
mutate(id = 1:dim(Salaries)[1]) %>%
select(id, rank,  discipline, sex, yrs.since.phd, yrs.service, salary) %>%
gather(key="Variable", value="value", c(yrs.since.phd, yrs.service, salary))
long_data
#### spread variable into multiple ones
wide_data <- long_data %>%
spread(Variable, value)
wide_data
####inner_join: An inner join matches pairs of observations whenever their keys are equal
x <- tribble(
~key, ~val_x,
1, "x1",
2, "x2",
3, "x3"
)
y <- tribble(
~key, ~val_y,
1, "y1",
2, "y2",
4, "y3"
)
x; y
Z <- x %>%
full_join(y, by = "key")
Z
####mutate: add new columns that are functions of existing columns
####pipe, %>%:
####mutate: ade new variables
Data <- Data %>%
mutate(mmse_10 = mmse * 10,
mmse_100 = mmse * 100)
names(Data)
####transmutate: add new variables and drops existing one
Data_new <- Data %>%
transmute(mmse_10 = mmse * 10)
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
##tidyverse: A powerful collection of R packages for preparing, wrangling and visualizing data
##tidyverse include the following packaes: dplyr, tidyr, stringr, forcats, tibble, readr, purr, ggplot, readr
##first read your data with readr
#The readr package solves the problem of parsing a flat file into a tibble
##The Salaries data set:  It describes the 9 month academic salaries of 397 college professors at a single institution in 2008-2009
##Read .csv
Salaries <- read.csv("salaries.csv")
class(Salaries) ## data format
names(Salaries) ## variable names
str(Salaries)  ##loot at the data structure
head(Salaries) ## first 6 rows of variables
tail(Salaries) ## last 6 rows of variables
##Read excel
library(readxl)
Salaries <- read_excel("salaries.xlsx", sheet=1)
glimpse(Salaries)  ## same as str(), show more data
View(Salaries)
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
#install.packages("tidyverse")
library(tidyverse)
#install.packages("tidyverse")
library(tidyverse)
##tidyverse: A powerful collection of R packages for preparing, wrangling and visualizing data
##tidyverse include the following packaes: dplyr, tidyr, stringr, forcats, tibble, readr, purr, ggplot, readr
##first read your data with readr
#The readr package solves the problem of parsing a flat file into a tibble
##The Salaries data set:  It describes the 9 month academic salaries of 397 college professors at a single institution in 2008-2009
##Read .csv
Salaries <- read.csv("salaries.csv")
class(Salaries) ## data format
names(Salaries) ## variable names
str(Salaries)  ##loot at the data structure
head(Salaries) ## first 6 rows of variables
tail(Salaries) ## last 6 rows of variables
##Read excel
library(readxl)
Salaries <- read_excel("salaries.xlsx", sheet=1)
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
##tidyverse: A powerful collection of R packages for preparing, wrangling and visualizing data
##tidyverse include the following packaes: dplyr, tidyr, stringr, forcats, tibble, readr, purr, ggplot, readr
##first read your data with readr
#The readr package solves the problem of parsing a flat file into a tibble
##The Salaries data set:  It describes the 9 month academic salaries of 397 college professors at a single institution in 2008-2009
##Read .csv
Salaries <- read.csv("salaries.csv")
class(Salaries) ## data format
names(Salaries) ## variable names
str(Salaries)  ##loot at the data structure
Sys.setenv(LANGUAGE= "en")
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
install.packages("tidyverse")
#install.packages("tidyverse")
library(tidyverse)
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
##tidyverse: A powerful collection of R packages for preparing, wrangling and visualizing data
##tidyverse include the following packaes: dplyr, tidyr, stringr, forcats, tibble, readr, purr, ggplot, readr
##first read your data with readr
#The readr package solves the problem of parsing a flat file into a tibble
##The Salaries data set:  It describes the 9 month academic salaries of 397 college professors at a single institution in 2008-2009
##Read .csv
Salaries <- read.csv("salaries.csv")
install.packages("tidyverse")
#install.packages("tidyverse")
library(tidyverse)
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
##tidyverse: A powerful collection of R packages for preparing, wrangling and visualizing data
##tidyverse include the following packaes: dplyr, tidyr, stringr, forcats, tibble, readr, purr, ggplot, readr
##first read your data with readr
#The readr package solves the problem of parsing a flat file into a tibble
##The Salaries data set:  It describes the 9 month academic salaries of 397 college professors at a single institution in 2008-2009
##Read .csv
Salaries <- read.csv("salaries.csv")
class(Salaries) ## data format
names(Salaries) ## variable names
str(Salaries)  ##loot at the data structure
head(Salaries) ## first 6 rows of variables
tail(Salaries) ## last 6 rows of variables
##Read excel
library(readxl)
Salaries <- read_excel("salaries.xlsx", sheet=1)
glimpse(Salaries)  ## same as str(), show more data
View(Salaries)
print(Salaries)
ggplot(Salaries) +
geom_boxplot(aes(x=rank, y=salary))
ggplot(Salaries) +
geom_boxplot(aes(x=discipline, y=salary))
ggplot(Salaries) +
geom_boxplot(aes(x=sex, y=salary))
ggplot(Salaries) +
geom_point(aes(x=yrs.since.phd, y=salary, color=rank))
ggplot(Salaries) +
geom_point(aes(x=yrs.service, y=salary, color=rank))
ggplot(Salaries) +
geom_boxplot(aes(x=sex, y=salary, fill=sex))+
facet_grid(discipline~rank, scale="free")
###### Select variables
newdata <- select(Salaries, rank, sex, salary)
head(newdata)
newdata <- select(Salaries, rank:sex)
head(newdata)
newdata <- select(Salaries, rank, sex, everything())
newdata
###### Select observations
newdata <- filter(Salaries, rank == "Prof")
newdata
newdata <- filter(Salaries, sex != "Male")
newdata
newdata <- filter(Salaries, rank == "Prof" & sex!="Male")
newdata
###### order the rows data descre
newdata <- arrange(Salaries, salary)
newdata
###### Creating new variables
newdata <- mutate(Salaries, salary_10 = salary * 10)
newdata
newdata <- mutate(Salaries, salary_levels = ifelse(salary > 100000, "High", "Low"))
newdata
newdata <- mutate(Salaries, salary_levels = ifelse(salary < 100000, "NA", salary))
newdata
###### Summarizing data
newdata <- summarize(Salaries,
mean_salary = mean(salary, na.rm=T),
max_salary = max(salary, na.rm=T))
newdata
######pipe, %>%: X %> f(y) means that x is ??piped?? in to the function f(x, y)
######The %>% operator passes the result on the left to the first parameter of the function on the right.
Salaries %>% head(n=10)
Salaries %>% names()
Salaries %>%
filter(rank == "Prof")
Salaries %>%
select(rank, sex, salary)
Salaries %>%
mutate(salary_10 = salary * 10)
Salaries %>%
summarize(mean_salary = mean(salary, na.rm=T))
Salaries %>%
filter(rank == "Prof") %>%
select(rank, sex, salary) %>%
mutate(salary_10 = salary * 10) %>%
summarize(mean_salary = mean(salary, na.rm=T))
###### Grouping
newdata <- Salaries %>%
group_by(rank) %>%
summarize(mean_salary = mean(salary, na.rm=T),
max_salary = max(salary, na.rm=T))
newdata
###### Mutation and summarize using group_by
newdata <- Salaries %>%
group_by(rank, sex) %>%
summarize(mean_salary = mean(salary, na.rm=T),
max_salary = max(salary, na.rm=T))
newdata
newdata %>%
ggplot()+
geom_col(aes(x=rank, y=mean_salary, fill=sex), position = "dodge2")
######Data cleaning
#####gather: combine multiple columns into one
glimpse(Salaries)
##### combine columns in to one
Salaries %>%
mutate(rank_discipline = paste(rank, discipline, sep="_"))
newdata <- Salaries %>%
unite("rank_discipline", c(rank, discipline))
newdata
##### separate one column to multiple columns
newdata %>%
separate("rank_discipline", c("rank", "discipline"))
#####
##### gather multiple variabls
long_data <- Salaries %>%
mutate(id = 1:dim(Salaries)[1]) %>%
select(id, rank,  discipline, sex, yrs.since.phd, yrs.service, salary) %>%
gather(key="Variable", value="value", c(yrs.since.phd, yrs.service, salary))
long_data
#### spread variable into multiple ones
wide_data <- long_data %>%
spread(Variable, value)
wide_data
####inner_join: An inner join matches pairs of observations whenever their keys are equal
x <- tribble(
~key, ~val_x,
1, "x1",
2, "x2",
3, "x3"
)
y <- tribble(
~key, ~val_y,
1, "y1",
2, "y2",
4, "y3"
)
x; y
Z <- x %>%
full_join(y, by = "key")
Z
####mutate: add new columns that are functions of existing columns
####pipe, %>%:
####mutate: ade new variables
Data <- Data %>%
mutate(mmse_10 = mmse * 10,
mmse_100 = mmse * 100)
names(Data)
#淇敼C鐩樹复鏃舵枃浠跺す涓嬮潰涓枃鐨勫悕绉伴棶棰?
#https://zhidao.baidu.com/question/748080860947976012.html
#瀹夎鍖? options(warning=-1)
Sys.setenv(LANGUAGE= "en")
Sys.setenv(LANGUAGE= "en")
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
##tidyverse: A powerful collection of R packages for preparing, wrangling and visualizing data
##tidyverse include the following packaes: dplyr, tidyr, stringr, forcats, tibble, readr, purr, ggplot, readr
##first read your data with readr
#The readr package solves the problem of parsing a flat file into a tibble
##The Salaries data set:  It describes the 9 month academic salaries of 397 college professors at a single institution in 2008-2009
##Read .csv
Salaries <- read.csv("salaries.csv")
class(Salaries) ## data format
names(Salaries) ## variable names
Sys.setenv(LANGUAGE= "en")
Sys.setenv(LANGUAGE= "en")
Sys.setenv(LANGUAGE= "en")
Sys.setenv(LANGUAGE= "en")
##### separate one column to multiple columns
newdata %>%
separate("rank_discipline", c("rank", "discipline"))
ls(); rm(list=ls())
getwd()
setwd("F:/XTBG/club meeting/R_Workshop_202109/1. R Basic Tidyverse")
#install.packages("tidyverse")
library(tidyverse)
##tidyverse: A powerful collection of R packages for preparing, wrangling and visualizing data
##tidyverse include the following packaes: dplyr, tidyr, stringr, forcats, tibble, readr, purr, ggplot, readr
##first read your data with readr
#The readr package solves the problem of parsing a flat file into a tibble
##The Salaries data set:  It describes the 9 month academic salaries of 397 college professors at a single institution in 2008-2009
##Read .csv
Salaries <- read.csv("salaries.csv")
class(Salaries) ## data format
names(Salaries) ## variable names
str(Salaries)  ##loot at the data structure
head(Salaries) ## first 6 rows of variables
tail(Salaries) ## last 6 rows of variables
##Read excel
library(readxl)
Salaries <- read_excel("salaries.xlsx", sheet=1)
glimpse(Salaries)  ## same as str(), show more data
View(Salaries)
print(Salaries)
ggplot(Salaries) +
geom_boxplot(aes(x=rank, y=salary))
ggplot(Salaries) +
geom_boxplot(aes(x=discipline, y=salary))
ggplot(Salaries) +
geom_boxplot(aes(x=sex, y=salary))
ggplot(Salaries) +
geom_point(aes(x=yrs.since.phd, y=salary, color=rank))
ggplot(Salaries) +
geom_point(aes(x=yrs.service, y=salary, color=rank))
ggplot(Salaries) +
geom_boxplot(aes(x=sex, y=salary, fill=sex))+
facet_grid(discipline~rank, scale="free")
###### Select variables
newdata <- select(Salaries, rank, sex, salary)
head(newdata)
newdata <- select(Salaries, rank:sex)
head(newdata)
newdata <- select(Salaries, rank, sex, everything())
newdata
###### Select observations
newdata <- filter(Salaries, rank == "Prof")
newdata
newdata <- filter(Salaries, sex != "Male")
newdata
newdata <- filter(Salaries, rank == "Prof" & sex!="Male")
newdata
###### order the rows data descre
newdata <- arrange(Salaries, salary)
newdata
###### Creating new variables
newdata <- mutate(Salaries, salary_10 = salary * 10)
newdata
newdata <- mutate(Salaries, salary_levels = ifelse(salary > 100000, "High", "Low"))
newdata
newdata <- mutate(Salaries, salary_levels = ifelse(salary < 100000, "NA", salary))
newdata
